{"version":3,"sources":["images/Gameplay.PNG","images/Menu.PNG","components/Image.js","pages/Posts.js","pages/Home.js","components/Footer.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Image","StyledDiv","className","src","this","props","alt","caption","Component","styled","div","Posts","Menu","Gameplay","header","Home","CSS","id","type","name","placeholder","Footer","Date","getFullYear","Header","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","nav","App","exact","path","component","Post","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,oiBCGtBC,E,uKAEb,OACI,kBAACC,EAAD,CAAWC,UAAU,+BACjB,6BACI,yBAAKA,UAAU,aACX,yBAAKC,IAAKC,KAAKC,MAAMF,IAAKG,IAAI,QAC1B,yBAAKJ,UAAU,WACX,4BAAKE,KAAKC,MAAME,iB,GARbC,aAiB7BP,EAAYQ,IAAOC,IAAV,K,4dCbTC,E,uKAEE,OACI,kBAAC,EAAD,KACI,yBAAKT,UAAU,mBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,gCACX,sHACA,uFAEJ,kBAAC,EAAD,CAAOC,IAAKS,IAAML,QAAS,qBAC3B,kBAAC,EAAD,CAAOJ,IAAKU,IAAUN,QAAS,mC,GAXnCC,aAmBdP,EAAYQ,IAAOK,OAAV,KAqBAH,I,y5BC1CMI,E,uKAEb,OACI,kBAACC,EAAD,KACI,yBAAKd,UAAU,mBACX,yBAAKC,IAAKU,IAAUP,IAAI,QACxB,0FACA,0EACA,8BACI,yBAAKJ,UAAU,+BACX,2BAAOe,GAAG,QAAQC,KAAK,OAAOhB,UAAU,eAAeiB,KAAK,QAAQC,YAAY,UAChF,yBAAKlB,UAAU,8BAAf,UAGR,uBAAGe,GAAG,gBAAN,8C,GAdcT,aAqB5BQ,EAAMP,IAAOK,OAAV,K,4cCvBM,SAASO,IACpB,OACI,kBAAC,EAAD,KACI,yBAAKnB,UAAU,eACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,gBAAb,SACY,IAAIoB,MAAOC,cADvB,kCAW5B,IAAMP,EAAMP,IAAOC,IAAV,K,sUCjBM,SAASc,IACpB,OACI,kBAACC,EAAD,KACI,yBAAKvB,UAAU,uCACX,4BAAQA,UAAU,iBAAiBgB,KAAK,SAASQ,cAAY,WAAWC,cAAY,0BAA0BC,gBAAc,yBAAyBC,gBAAc,QAAQC,aAAW,qBAClL,0BAAM5B,UAAU,yBAGpB,yBAAKA,UAAU,2BAA2Be,GAAG,0BACzC,wBAAIf,UAAU,gCACV,wBAAIA,UAAU,mBACV,kBAAC,IAAD,CAAMA,UAAU,WAAW6B,GAAG,KAA9B,UAEJ,wBAAI7B,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAW6B,GAAG,UAA9B,UAEJ,wBAAI7B,UAAU,YACV,kBAAC,IAAD,CAAMA,UAAU,WAAW6B,GAAG,aAA9B,iBAS5B,IAAMN,EAAShB,IAAOuB,IAAV,K,OCNGC,MAbf,WACE,OACE,yBAAK/B,UAAU,OACb,kBAACsB,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWrB,IACjC,kBAAC,IAAD,CAAOoB,KAAK,SAASC,UAAWC,KAElC,kBAAChB,EAAD,QCPciB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e4c1c4a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Gameplay.f1767473.PNG\";","module.exports = __webpack_public_path__ + \"static/media/Menu.b468186a.PNG\";","import React, { Component } from 'react'\r\nimport styled from 'styled-components';\r\n\r\nexport default class Image extends Component {\r\n    render() {        \r\n        return (\r\n            <StyledDiv className=\"col-md-6 col-sm-12 col-lg-6\">\r\n                <div>\r\n                    <div className=\"thumbnail\">\r\n                        <img src={this.props.src} alt=\"...\"/>\r\n                            <div className=\"caption\">\r\n                                <h3>{this.props.caption}</h3>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </StyledDiv>\r\n        );\r\n    }\r\n}\r\n\r\nconst StyledDiv = styled.div` {\r\n    .caption {\r\n        text-align: center;\r\n    }\r\n    .thumbnail {\r\n        text-align: center;\r\n    }\r\n\r\n    img {\r\n        width: 42em;\r\n        padding: 3em;\r\n    }\r\n\r\n    h3 {\r\n        padding: 0.4em 0em;\r\n        color: var(--whites);\r\n    }\r\n}`;\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport Image from '../components/Image'\r\n\r\nimport Menu from './../images/Menu.PNG'\r\nimport Gameplay from './../images/Gameplay.PNG'\r\n\r\nclass Posts extends Component {\r\n    render() {        \r\n        return (\r\n            <StyledDiv>\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"summary col-md-12 col-sm-12 \">\r\n                            <p> The Raged Knight is an action-paced bow tower defense game currently under development</p>\r\n                            <p> Here you can check out weekly screenshots and updates.</p>\r\n                        </div>\r\n                        <Image src={Menu} caption={\"Main Menu on 8-9\"} /> \r\n                        <Image src={Gameplay} caption={\"Level 1 Snapshot on 8-9\"}/> \r\n                    </div>\r\n                </div>\r\n            </StyledDiv>\r\n        )\r\n    }\r\n}\r\n\r\nconst StyledDiv = styled.header` {\r\n    p {\r\n        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n        font-color: var(--whites);\r\n        font-size: 1.5em;\r\n    }\r\n    \r\n    .content {\r\n        padding: 4em 5em;\r\n    }\r\n\r\n    .summary {\r\n        color: var(--whites);\r\n        padding: 4em 4em 1em 4em;\r\n        text-align: center;\r\n    }\r\n\r\n    .row {\r\n    }\r\n}`;\r\n\r\nexport default Posts;\r\n","import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Gameplay from './../images/Gameplay.PNG'\r\n\r\nexport default class Home extends Component {\r\n    render() {\r\n        return (\r\n            <CSS>\r\n                <div className=\"container-fluid\">                    \r\n                    <img src={Gameplay} alt=\"...\"/>\r\n                    <p>Coming to Android (and likely IOS) devices sometime in 2020</p>\r\n                    <p>Join our mailing list to wishlist the game.</p>\r\n                    <form>\r\n                        <div className=\"input-group container-fluid\">\r\n                            <input id=\"email\" type=\"text\" className=\"form-control\" name=\"email\" placeholder=\"Email\" />\r\n                            <btn className=\"btn btn-primary bg-primary\">Join</btn>\r\n                        </div>\r\n                    </form>\r\n                    <p id=\"notification\">(You'll be notified of its release.)</p>\r\n                </div>\r\n            </CSS>\r\n        )\r\n    }\r\n}\r\n\r\nconst CSS = styled.header` {\r\n    p {\r\n        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n        font-size: 1.5em;\r\n    }\r\n\r\n    #notification {\r\n        margin-top: -3em;\r\n        font-size: 1em;\r\n    }\r\n\r\n    #email {\r\n        border: 1px solid #ccc; \r\n        border-radius: 15px 0px 0px 15px;\r\n    }\r\n\r\n    .btn {\r\n        border: 1px solid btn-primary; \r\n        border-radius: 0px 15px 15px 0px;\r\n        margin-left: 0px;\r\n        margin-up: -5px;\r\n    }\r\n\r\n    img {\r\n        width: 50em;\r\n        margin: 2em;\r\n    }\r\n\r\n    .container-fluid {\r\n        color: var(--whites);\r\n        text-align: center;\r\n    }\r\n\r\n    btn {\r\n        margin-left: 1.2em;\r\n        width: 4em;\r\n    }\r\n\r\n    form {        \r\n        margin: 3em auto 4em auto;\r\n    }\r\n\r\n    .input-group {\r\n        width: 23em;\r\n        text-align: center;\r\n    }\r\n}`;","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <CSS>\r\n            <div className=\"main-footer\">\r\n                <div className=\"footer-middle\">\r\n                    <div className=\"container\">\r\n                        <div className=\"footer-bottom\">\r\n                            <p className=\"text-sx-left\">\r\n                                &copy; {new Date().getFullYear()} Rage Knight - All Rights\r\n                    </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CSS>\r\n    )\r\n}\r\n\r\nconst CSS = styled.div` {\r\n.main-footer {\r\n    margin-top: 2em;\r\n }\r\n \r\n .footer-middle {\r\n   background: var(--darkPurples);\r\n   color: var(--whites);\r\n   font-weight: 430;\r\n   text-align: center;\r\n }\r\n \r\n .footer-bottom {\r\n   padding: 2em 0em 1em 0em;\r\n   text-align: center;\r\n }\r\n \r\n .text-sx-left {\r\n   font-size: 1.2em;\r\n   font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n }\r\n}`;","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <Navbar>\r\n            <nav className=\"navbar navbar-dark navbar-expand-lg\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto container\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/\">Home </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/posts\">Posts</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/requests\">Requests</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nconst Navbar = styled.nav` {\r\n    .navbar {\r\n      background-color: var(--darkPurples);\r\n    }\r\n\r\n    ul {\r\n        width: 32em;\r\n    }\r\n\r\n    a {\r\n        font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n        font-size: 1.5em;\r\n    }\r\n\r\n\r\n}`;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport Post from './pages/Posts';\nimport Home from './pages/Home';\nimport Footer from './components/Footer';\nimport Header from './components/Header'\n\nimport {Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/posts\" component={Post}/>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}